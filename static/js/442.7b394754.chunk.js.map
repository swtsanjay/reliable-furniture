{"version":3,"file":"static/js/442.7b394754.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/user.js","services/jobStage.js","views/components/Pagination.js","views/pages/UserManagement.js","services/job.js","views/pages/Job.js","views/pages/JobStage.js","services/order.js","views/pages/Order.js","views/layout/route.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["import { Form, Row, Col, Typography, Card, Progress } from 'antd';\n\nconst App = () => {\n    return (\n        <>\n            <Row gutter={[12, 32]}>\n                <Col span={24}>\n                    <Typography.Title level={4}>Overview</Typography.Title>\n                </Col>\n                <Col span={6}>\n                    <Card\n                        hoverable\n                        style={{\n                            width: 300,\n                            backgroundColor: '#ce90e3',\n                            borderRadius: '26px'\n                        }}\n                    >\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>Total Order</Typography.Title>\n                        <Typography.Title level={2} style={{}}>47</Typography.Title>\n                    </Card>\n                </Col>\n                <Col span={6}>\n                    <Card\n                        hoverable\n                        style={{\n                            width: 300,\n                            backgroundColor: '#a8fdeb',\n                            borderRadius: '26px'\n                        }}\n                    >\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>Total Order Value</Typography.Title>\n                        <Typography.Title level={2} style={{}}>₹ 748569.68</Typography.Title>\n                    </Card>\n                </Col>\n                <Col span={6}>\n                    <Card\n                        hoverable\n                        style={{\n                            width: 300,\n                            backgroundColor: '#fffc80',\n                            borderRadius: '26px'\n                        }}\n                    >\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>Total Product Sale</Typography.Title>\n                        <Typography.Title level={2} style={{}}>1619</Typography.Title>\n                    </Card>\n                </Col>\n                <Col span={6}>\n                    <Card\n                        hoverable\n                        style={{\n                            width: 300,\n                            backgroundColor: '#9ef4ff',\n                            borderRadius: '26px'\n                        }}\n                    >\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>New User</Typography.Title>\n                        <Typography.Title level={2} style={{}}>89</Typography.Title>\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card\n                        title=\"Revenue\"\n                        hoverable\n                        style={{\n                            width: 655,\n                            height: '500px'\n                        }}\n                    >\n                        <p>Card content</p>\n                        <p>Card content</p>\n                        <p>Card content</p>\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card\n                        title=\"Weekly Wise Sale\"\n                        hoverable\n                        style={{\n                            width: 655,\n                            height: '500px'\n                        }}\n                    >\n                        <Form.Item label=\"Methane\" >\n                            <Progress percent={30} />\n                        </Form.Item>\n                        <Form.Item label=\"Butane\">\n                            <Progress percent={50} status=\"active\" />\n                        </Form.Item>\n                        <Form.Item label=\"Propanol\">\n                            <Progress percent={70} status=\"exception\" />\n                        </Form.Item>\n                        <Form.Item label='Alcohol'>\n                            <Progress percent={100} />\n                        </Form.Item>\n                        <Form.Item label=\"Methane\" >\n                            <Progress percent={26} />\n                        </Form.Item>\n                        <Form.Item label=\"Butane\">\n                            <Progress percent={6} status=\"active\" />\n                        </Form.Item>\n                        <Form.Item label=\"Propanol\">\n                            <Progress percent={16} status=\"exception\" />\n                        </Form.Item>\n                        <Form.Item label='Alcohol'>\n                            <Progress percent={19} />\n                        </Form.Item>\n                        <Form.Item label=\"Propanol\">\n                            <Progress percent={16} status=\"exception\" />\n                        </Form.Item>\n                        <Form.Item label='Alcohol'>\n                            <Progress percent={19} />\n                        </Form.Item>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default App;","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'user';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + '/list-user', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\n    }\n}","import axios from \"../utils/axios\";\n\nexport default class jobStageService {\n\n    static baseURL = 'job-stage';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n}","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, message } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport UserService from '../../services/user';\nimport jobStageService from '../../services/jobStage';\nimport Pagination from '../components/Pagination';\n\n\nexport default function UserManagement() {\n\n    const [data, setData] = useState([]);\n    const [jobStage, setjobStage] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const columns = [\n        {\n            title: 'Username',\n            dataIndex: 'userName',\n        },\n        {\n            title: 'Job Stage Assigned',\n            dataIndex: 'jobStageDetails',\n            width: 250,\n            render: (v) => (v.name)\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 60,\n            render: status => {\n                if (status === \"blocked\") {\n                    return <Tag color='red'>Blocked</Tag>\n                } else if (status === \"active\") {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color=\"yellow\">Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this User?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        UserService.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    function jobStageList() {\n        setLoading(true);\n        jobStageService.list({ isAll: 1 }).then(res => { setjobStage(res.data || []); }).catch(err => { message.error('Job Stage data not loaded'); });;\n    }\n\n    const deleteData = (id) => {\n        UserService.deleteUser(id).then(res => {\n            message.success(res.message);\n            list();\n        }).catch(err => {\n            message.error(err.message);\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    // tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n        jobStageList()\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, jobStage }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, qData, list, }) {\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, jobStage } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { ...dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const save = () => {\n        setAjxRequesting(true);\n        UserService.saveUser(data).then((res) => {\n            message.success(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                message.error(dt);\n            } else {\n                message.error(err.message);\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                keyboard={false}\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={800}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Name\" required>\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Username\" required>\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange({ userName: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label={data?._id ? \"Update Password\" : \"Set Password\"} required={data?._id ? false : true}>\n                                            <Input type='password' value={data?.password} onChange={e => { handleChange({ password: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Select Job Stage\" required>\n                                            <Select value={data.jobStageId} onChange={v => { handleChange({ jobStageId: v }) }}\n                                                options={\n                                                    jobStage.map(v => (\n                                                        {\n                                                            value: v._id,\n                                                            label: v.name,\n                                                        }\n                                                    ))\n                                                }\n                                            >\n                                            </Select>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Status\" required>\n                                            <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                                <Select.Option value=\"active\">Active</Select.Option>\n                                                <Select.Option value=\"inactive\">Inactive</Select.Option>\n                                                <Select.Option value=\"blocked\">Blocked</Select.Option>\n                                            </Select>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class jobService {\n\n    static baseURL = 'job';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, message, Input } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport jobService from '../../services/job';\nimport Pagination from '../components/Pagination';\n\nexport default function Job({jobStageId}) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [qData, setQData] = useState({ page: 1, limit: 20,jobStageId });\n    const addNewModalRef = useRef();\n    const columns = [\n        {\n            title: 'Job Name',\n            dataIndex: 'jobName',\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this Data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        jobService.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        jobService.delete(id).then(res => {\n            message.success(res.message);\n            list();\n        }).catch(err => {\n            message.error(err.message);\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)'/* , x: 'calc(100vw - 387px)' */ }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list,jobStageId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, list, }) {\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list,jobStageId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { ...dt }\n                    : { jobStageId }\n            );\n        }\n    }));\n\n    const save = () => {\n        setAjxRequesting(true);\n        jobService.save(data).then((res) => {\n            message.success(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                message.error(dt);\n            } else {\n                message.error(err.message);\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Job'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                keyboard={false}\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={400}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Job Name\" required>\n                                            <Input placeholder=\"Job Name\" value={data.jobName}  />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, message, Input } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport jobStageService from '../../services/jobStage';\nimport Pagination from '../components/Pagination';\nimport Job from './Job';\n\n\nexport default function JobStage() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const ModelJobRef = useRef();\n    const columns = [\n        {\n            title: 'Stage No',\n            dataIndex: 'stageNo',\n            width: 100\n        },\n        {\n            title: 'Job Stage',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Job',\n            dataIndex: '_id',\n            width: 50,\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelJobRef.current.openForm({ _id: row._id, name: row.name }) }} >Job</Button>\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this Data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        jobStageService.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        jobStageService.delete(id).then(res => {\n            message.success(res.message);\n            list();\n        }).catch(err => {\n            message.error(err.message);\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[1].fixed = true;\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Job Stage</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <JobForm ref={ModelJobRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, deleteData, qData, list, }) {\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined || v === \"\") {\n            delete qData[key];\n            list();\n        }\n    };\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { ...dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const save = () => {\n        setAjxRequesting(true);\n        jobStageService.save(data).then((res) => {\n            message.success(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                message.error(dt);\n            } else {\n                message.error(err.message);\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Job Stage'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                keyboard={false}\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={400}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Stage No\" required>\n                                            <Input placeholder=\"Stage No\" type='number' value={data.stageNo} onChange={e => { handleChange({ stageNo: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Name\" required>\n                                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst JobForm = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={600}\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                ]}\n            >\n                <Job {...{ jobStageId: data._id }} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class OrderService {\n\n    static baseURL = 'order';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static listJobStageStatus(data) {\n        return axios.get(this.baseURL + '/job-order-status', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Tabs, message, Card, Statistic } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined, ArrowDownOutlined, ArrowUpOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport orderService from '../../services/order';\nimport Pagination from '../components/Pagination';\nimport jobStageService from '../../services/jobStage';\nimport jobService from '../../services/job';\n\n\nexport default function Order() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const jobOrderStatusModalRef = useRef();\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Quantity',\n            dataIndex: 'quantity',\n            width: 80\n        },\n        {\n            title: 'Order Job Status',\n            dataIndex: '_id',\n            width: 170,\n            render: (v,row) => <> <Button type=\"primary\" size='small' onClick={() => jobOrderStatusModalRef.current.openForm(row)}>Status</Button> </>\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: status => {\n                if (status == 'initial') {\n                    return <Tag color='blue'>Initial</Tag>\n                } else {\n                    return <Tag color=\"yellow\">Completed</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this Data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        orderService.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        orderService.delete(id).then(res => {\n            message.success(res.message);\n            list();\n        }).catch(err => {\n            message.error(err.message);\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Order </Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <JobOrderStatusModel ref={jobOrderStatusModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, qData, list }) {\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined || v === \"\") {\n            delete qData[key];\n            list();\n        }\n    };\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { ...dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const save = () => {\n        setAjxRequesting(true);\n        orderService.save(data).then((res) => {\n            message.success(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                message.error(dt);\n            } else {\n                message.error(err.message);\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Order'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                keyboard={false}\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={24}>\n                                        <Form.Item label=\" Name\" required>\n                                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Quantity\" required>\n                                            <Input placeholder=\"Quantity\" type='number' value={data.quantity} onChange={e => { handleChange({ quantity: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Status\" required>\n                                            <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                                <Select.Option value=\"initial\">Initial</Select.Option>\n                                                <Select.Option value=\"completed\">Completed</Select.Option>\n                                            </Select>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\nconst JobOrderStatusModel = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [order, setOrder] = useState()\n    const [currentSubJobList, setCurrentSubJobList] = useState([])\n    const [activeKey, setActiveKey] = useState('');\n\n    console.log(\"this is dt\",order)\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setOrder(dt)\n        }\n    }));\n\n    function list() {\n        setAjxRequesting(true);\n        jobStageService.list().then(res => {\n            setData(res.data);\n        }).catch(err => { }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    useEffect(() => {\n        list();\n    }, [open]);\n\n    useEffect(() => {\n        setActiveKey(data[0]?._id);\n    }, [data])\n\n\n    return (\n        <>\n            <Modal\n                title={\"Job Order Status\"}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1000}\n                footer={null}\n\n            >\n                <Spin spinning={ajxRequesting}>\n                    {data.length > 0 &&\n                        <Card size='small'>\n                            <Tabs\n                                activeKey={activeKey}\n                                onChange={v => { setActiveKey(v); }}\n                                type=\"card\"\n                                style={{ height: 300 }}\n                                items={data.map((v) => ({\n                                    label: `${v?.name}`,\n                                    key: `${v?._id}`,\n                                    children: <>\n                                        <Card bordered={false} size=\"small\">\n                                            <SubJobsTabs subJobs={data.find(v => v?._id === activeKey)} {...{ order }}  />\n                                        </Card>\n                                    </>,\n                                }))}\n                            />\n                        </Card>\n                    }\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst SubJobsTabs = ({ subJobs,order }) => {\n\n    const [listJobs, setListJobs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [activeKey, setActiveKey] = useState('');\n    // console.log(\"this is order Id\",orderId)\n    useEffect(() => {\n        if (subJobs?._id) {\n            setLoading(true);\n            jobService.list({ jobStageId: subJobs?._id }).then(res => {\n                setListJobs(res?.data)\n            }).catch(err => { }).finally(() => {\n                // setAjxRequesting(false);\n            });\n        } else {\n            setListJobs([]);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (listJobs.length) {\n            setActiveKey(listJobs[0]?._id);\n        }\n    }, [listJobs]);\n\n    return (\n        <Tabs\n            type=\"card\"\n            destroyInactiveTabPane={false}\n            tabPosition={\"left\"}\n            onChange={v => { setActiveKey(v); }}\n            activeKey={activeKey}\n            items={[\n                ...listJobs?.map(v => ({\n                    label: v.jobName,\n                    key: v._id,\n                    children: <DataCard jobId={v._id} {...{ order }} subJobs={subJobs?._id} />\n                }))\n            ]}\n        />\n    );\n}\n\nconst DataCard =({jobId,order,subJobs,})=>{\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [data,setData] = useState({})\n    const orderModalRef = useRef();\n    // console.log(\"this is order Id\",)\n    function list(){\n        setAjxRequesting(true);\n        orderService.listJobStageStatus({jobId:jobId,orderId:order?._id,jobStageId:subJobs}).then((res)=>{\n            setData(res?.data[0])\n        }).catch(err => { }).finally(() => {\n            setAjxRequesting(false);\n        });\n    } \n\n    useEffect(() => {\n     list()\n    }, [jobId]);\n    \n    return(\n        <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n        <Card style={{ backgroundColor: \"rgb(240, 242, 245)\" }}>\n        <Row gutter={16}>\n            <Col span={12}>\n                <Card bordered={false} style={{height:'120px'}}>\n                    <Statistic\n                        title=\"Completed\"\n                        value={data?.status ==='completed' ? data?.quantity:0}\n                        // precision={2}\n                        valueStyle={{\n                            color: '#3f8600',\n                        }}\n                        prefix={<ArrowUpOutlined />}\n                        suffix=\"(Items)\"\n                    />\n                </Card>\n            </Col>\n            <Col span={12}>\n                <Card bordered={false} style={{height:'120px'}} >\n                    <Statistic\n                        title=\"Rejected\"\n                        value={data?.status ==='rejected' ? data?.quantity:0}\n                        valueStyle={{\n                            color: '#cf1322',\n                        }}\n                        prefix={<ArrowDownOutlined />}\n                        suffix={<Button type=\"text\" onClick={() => orderModalRef.current.openForm(order)} danger size1=\"small\">Generate New Order</Button>}\n                        \n                    />\n                    <span style={{marginTop:0,color:'gray'}}>{data?.rejectionMsg ?data.rejectionMsg : \"\" }</span>\n                </Card>\n                    <ReorderModel ref={orderModalRef} />\n            </Col>\n        </Row>\n    </Card>\n    </Spin>\n    )\n}\n\nconst ReorderModel = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [orderData, setOrderData] = useState()\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setOrderData(dt)\n        }\n    }));\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    const save = () => {\n        setAjxRequesting(true);\n        orderService.save({...data,parentId:orderData?._id,name:orderData?.name}).then((res) => {\n            message.success(res.message);\n            handleChange({ ...res.data });\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                message.error(dt);\n            } else {\n                message.error(err.message);\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    return (\n        <>\n             <Modal\n                title= \"Re-Order Rejected\"\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                keyboard={false}\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Quantity\" required>\n                                            <Input placeholder=\"Quantity\" type='number' onChange={e => { handleChange({ quantity: e.target.value }) }} value={data.quantity}  />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\n\nimport Dashboard from '../pages/Dashboard';\nimport UserManagement from '../pages/UserManagement';\nimport JobStage from '../pages/JobStage';\nimport Order from '../pages/Order';\n\n\nconst routes = [\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\n    { title: 'User', icon: ApartmentOutlined, url: '/users', component: UserManagement },\n    { title: 'Job Stage', icon: ApartmentOutlined, url: '/job-stage', component: JobStage },\n    { title: 'Order', icon: ApartmentOutlined, url: '/order', component: Order },\n].filter(v => (!v.hidden) || v.children?.length);\n\nexport default routes;","import { Menu } from 'antd';\nimport React from 'react';\nimport routes from './route';\nimport { Link, useLocation } from 'react-router-dom';\nimport { LogoutOutlined } from '@ant-design/icons';\n\n\nconst items = [...routes];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach((v, i) => {\n        if (v.children?.length) {\n            arr[i] = {\n                ...arr[i],\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            arr[i] = {\n                ...v,\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n        }\n    })\n}\nconvertMultiToSingle(items);\n\nitems.push(\n    {\n        label: 'Logout',\n        icon: <LogoutOutlined />,\n        key: 'logout',\n        style: { color: 'red' },\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\n        component: <></>\n    }\n);\n\nconst App = () => {\n    const paths = [];\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\n        paths.push(prev + '/' + cur);\n        return prev + '/' + cur;\n    });\n\n    return (\n        <>\n            {\n                <Menu\n                    defaultSelectedKeys={[paths.pop()]}\n                    defaultOpenKeys={[...paths]}\n                    mode=\"horizontal\"\n                    theme=\"dark\"\n                    items={items}\n                />\n            }\n        </>\n    );\n};\n\nexport default App;","import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import React from \"react\";\nimport { Card, Layout } from \"antd\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport routes from \"./route\";\nimport Error404 from \"../pages/errors/Error404\";\n\nconst newRoutes = [];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach(v => {\n        if (v.children) {\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\n        }\n    })\n}\nconvertMultiToSingle([...routes]);\n\nexport default function MyLayout() {\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh' }}>\n                <Layout className=\"site-layout\">\n                    <Menu />\n                    <Layout.Content\n                        style={{\n                            margin: '24px 40px 0 40px',\n                        }}\n                    >\n                        <Card bordered>\n                            <Routes>\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["gutter","span","level","hoverable","style","width","backgroundColor","borderRadius","marginTop","title","height","label","percent","status","service","id","data","axios","this","baseURL","params","query","ids","jobStageService","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","Search","addNewModalRef","list","onSubmitCapture","className","marginBottom","float","type","icon","PlusOutlined","onClick","openForm","AddForm","forwardRef","ref","jobStage","useState","open","setOpen","aspect","setData","ajxRequesting","setAjxRequesting","handleChange","value","useImperativeHandle","dt","save","UserService","then","res","message","catch","err","Object","keys","finally","_id","top","okText","keyboard","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","footer","spinning","indicator","LoadingOutlined","fontSize","spin","layout","required","placeholder","name","e","target","userName","password","jobStageId","v","options","map","jobService","Job","loading","setLoading","useRef","columns","dataIndex","render","row","onConfirm","deleteData","cancelText","size","danger","DeleteOutlined","EditOutlined","filter","item","hidden","key","extra","tableColumns","ellipsis","fixed","length","tableProps","bordered","showHeader","tableLayout","undefined","useEffect","pagination","position","dataSource","scroll","y","jobName","stageNo","JobForm","OrderService","allowClear","htmlType","orderService","quantity","JobOrderStatusModel","order","setOrder","activeKey","setActiveKey","console","log","items","children","SubJobsTabs","subJobs","find","listJobs","setListJobs","destroyInactiveTabPane","tabPosition","DataCard","jobId","orderModalRef","orderId","valueStyle","color","prefix","ArrowUpOutlined","suffix","ArrowDownOutlined","size1","rejectionMsg","ReorderModel","orderData","setOrderData","parentId","routes","DashboardOutlined","url","component","Dashboard","ApartmentOutlined","setjobStage","isAll","x","ModelJobRef","jobOrderStatusModalRef","convertMultiToSingle","arr","prevBaseUrl","forEach","i","to","push","LogoutOutlined","window","localStorage","clear","location","reload","paths","useLocation","pathname","split","reduce","prev","cur","defaultSelectedKeys","pop","defaultOpenKeys","mode","theme","Error404","subTitle","newRoutes","MyLayout","minHeight","Menu","margin","path","element"],"sourceRoot":""}